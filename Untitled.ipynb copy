{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "4ef55a19",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "amma was good\n"
     ]
    }
   ],
   "source": [
    "s=\"amma to good\"\n",
    "a=s.replace('to','was')\n",
    "print(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "0755fe29",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n"
     ]
    }
   ],
   "source": [
    "s=\"amma was great\"\n",
    "print(s.startswith(\"\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "03c51010",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "AMMA WAS GREAT\n"
     ]
    }
   ],
   "source": [
    "s=\"amma was great\"\n",
    "print(s.upper())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "4b8299f1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5\n"
     ]
    }
   ],
   "source": [
    "s=[1,2,2,3,4,4,4,4,4]\n",
    "print(s.count(4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f11670ca",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enter a marks70\n",
      "nothing\n"
     ]
    }
   ],
   "source": [
    "marks=float(input(\"enter a marks\"))\n",
    "if marks >70:\n",
    "    print(\"you win prize\")\n",
    "else:\n",
    "    print(\"nothing\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "63f1c897",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enter a marks72\n",
      "you win prize\n"
     ]
    }
   ],
   "source": [
    "marks=float(input(\"enter a marks\"))\n",
    "if marks > 70:\n",
    "    print(\"you win prize\")\n",
    "else:\n",
    "    print(\"sorry\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "eb4a0d6b",
   "metadata": {},
   "outputs": [],
   "source": [
    "marks=float(input(\"enter a marks\"))\n",
    "marks=float(input(\"enter a marks\"))<,[;/\\]=-0;lkgasdfhjkl\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
